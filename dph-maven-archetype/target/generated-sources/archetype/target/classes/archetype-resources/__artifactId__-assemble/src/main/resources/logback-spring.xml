#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<!-- 应用名和路径需要根据项目来更改-->
<configuration debug="false">
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <property name="appName" value="${artifactId}"/>
    <!-- 定义变量 -->
    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{0}:%L%X{serialNo}- %msg%n"/>

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <!--<property name="LOG_HOME" value="/home" />-->
    <!-- 本地开发环境变量local 本地开发时不生成日志文件-->
    <!--<springProfile name="local">-->
    <!-- show sql 目前只在本地开发环境打印，以后可根据需求在其他的环境中打出-->
    <if condition='!property("spring.profiles.active").equals("online")'>
        <then>
            <logger name="${package}.mapper" level="DEBUG"/>
        </then>
    </if>
    <!--<logger name="com.dph.supply.mapper" level="DEBUG"/>-->
    <!--可根据自己开发需求是否生成日志文件，路径可能改-->
    <if condition='property("os.name").toUpperCase().contains("WINDOWS")'>
        <then>
            <property name="LOG_HOME" value="D:/home/webService/log/${symbol_dollar}{appName}"/>
        </then>
    </if>
    <if condition='property("os.name").toUpperCase().contains("MAC")'>
        <then>
            <property name="LOG_HOME" value="~/webService/log/${symbol_dollar}{appName}"/>
        </then>
    </if>
    <if condition='property("os.name").toUpperCase().contains("LINUX")'>
        <then>
            <property name="LOG_HOME" value="/home/webService/log/${symbol_dollar}{appName}"/>
        </then>
    </if>
    <!-- ***************************************************************** -->
    <!-- info级别的日志appender,这里把所有日志都输出到一个文件，没有区分不同的业务类型 -->
    <!-- ***************************************************************** -->
    <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="${symbol_dollar}{appName}-info">
        <file>${symbol_dollar}{LOG_HOME}/${symbol_dollar}{appName}-info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${symbol_dollar}{LOG_HOME}/${symbol_dollar}{appName}-info.log.%d{yyyy-MM-dd}.%i
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${symbol_dollar}{pattern}</pattern>
        </encoder>
    </appender>

    <!-- ***************************************************************** -->
    <!-- error级别日志appender -->
    <!-- ***************************************************************** -->
    <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="${symbol_dollar}{appName}-error">
        <file>${symbol_dollar}{LOG_HOME}/${symbol_dollar}{appName}-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${symbol_dollar}{LOG_HOME}/${symbol_dollar}{appName}-error.log.%d{yyyy-MM-dd}.%i
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>${symbol_dollar}{pattern}</pattern>
        </encoder>
    </appender>

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <!-- 日志输出地点，输出一个就行，同上面关闭原因一致 -->
        <!--<appender-ref ref="STDOUT"/>-->
        <appender-ref ref="${symbol_dollar}{appName}-info"/>
        <appender-ref ref="${symbol_dollar}{appName}-error"/>
    </root>
</configuration>